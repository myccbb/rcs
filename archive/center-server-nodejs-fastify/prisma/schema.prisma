generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model collection_label_rel {
  internal_id   BigInt   @id @default(autoincrement())
  collection_id String   @db.VarChar(32)
  label_id      String   @db.VarChar(64)
  create_time   DateTime @db.DateTime(0)

  Collection collection @relation(fields: [collection_id], references: [id])
  Label      label      @relation(fields: [label_id], references: [id])

  @@unique([collection_id, label_id], map: "collection_label_uidx")
  @@index([collection_id], map: "collection_idx")
  @@index([label_id], map: "label_idx")
}

model collection_piece_rel {
  internal_id   BigInt   @id @default(autoincrement())
  collection_id String   @db.VarChar(32)
  piece_id      String   @db.VarChar(32)
  create_time   DateTime @db.DateTime(0)
  update_time   DateTime @db.DateTime(0)

  Collection collection @relation(fields: [collection_id], references: [id])
  Piece      piece      @relation(fields: [piece_id], references: [id])

  @@unique([collection_id, piece_id], map: "collection_piece_uidx")
  @@index([collection_id], map: "collection_idx")
  @@index([piece_id], map: "piece_idx")
}

model piece_label_rel {
  internal_id BigInt   @id @default(autoincrement())
  piece_id    String   @db.VarChar(32)
  label_id    String   @db.VarChar(64)
  create_time DateTime @db.DateTime(0)

  Piece piece @relation(fields: [piece_id], references: [id])
  Label label @relation(fields: [label_id], references: [id])

  @@unique([piece_id, label_id], map: "piece_label_uidx")
  @@index([label_id], map: "label_idx")
  @@index([piece_id], map: "piece_idx")
}

model collection {
  internal_id BigInt   @id @default(autoincrement())
  id          String   @unique(map: "id_uidx") @db.VarChar(32)
  type_id     String   @db.VarChar(32)
  title       String   @default("") @db.VarChar(64)
  content     String   @db.LongText
  create_time DateTime @db.DateTime(0)
  update_time DateTime @db.DateTime(0)

  ObjectType object_type @relation(fields: [type_id], references: [id])

  collection_piece_rel collection_piece_rel[]
  collection_label_rel collection_label_rel[]
  @@index([type_id], map: "type_idx")
}

model label {
  internal_id BigInt   @id @default(autoincrement())
  id          String   @unique(map: "id_uidx") @db.VarChar(32)
  name        String   @unique(map: "name_uidx") @db.VarChar(64)
  parent_id   String   @db.VarChar(32)
  extra       String   @db.LongText
  create_time DateTime @db.DateTime(0)
  update_time DateTime @db.DateTime(0)

  collection_label_rel collection_label_rel[]
  piece_label_rel      piece_label_rel[]
  @@index([parent_id], map: "parent_id_idx")
}

model object_type {
  internal_id BigInt   @id @default(autoincrement())
  id          String   @unique(map: "id_uidx") @db.VarChar(32)
  name        String   @db.VarChar(32)
  category    Int      @db.TinyInt
  create_time DateTime @db.DateTime(0)
  update_time DateTime @db.DateTime(0)

  collection collection[]
  piece      piece[]
  @@unique([category, name], map: "category_name_uidx")
}

model piece {
  internal_id BigInt   @id @default(autoincrement())
  id          String   @unique(map: "id_uidx") @db.VarChar(32)
  type_id     String   @db.VarChar(32)
  title       String   @default("") @db.VarChar(64)
  content     String   @db.LongText
  create_time DateTime @db.DateTime(0)
  update_time DateTime @db.DateTime(0)

  ObjectType object_type @relation(fields: [type_id], references: [id])

  collection_piece_rel collection_piece_rel[]
  piece_label_rel      piece_label_rel[]
  @@index([type_id], map: "type_idx")
}
